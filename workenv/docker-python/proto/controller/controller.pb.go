// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: controller/controller.proto

package controller

import (
	proto "github.com/9triver/ignis/proto"
	resource "github.com/9triver/ignis/proto/resource"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_UNSPECIFIED       CommandType = 0 // unknown command type
	CommandType_ACK               CommandType = 1 // acknowledged
	CommandType_FR_READY          CommandType = 2
	CommandType_FR_APPEND_DATA    CommandType = 3 // frontend: append data node
	CommandType_FR_APPEND_PY_FUNC CommandType = 4 // frontend: append python function (control node definition)
	CommandType_FR_APPEND_ARG     CommandType = 5 // frontend: append function arg to specified actor
	CommandType_BK_RETURN_RESULT  CommandType = 6 // backend: send back execution result
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ACK",
		2: "FR_READY",
		3: "FR_APPEND_DATA",
		4: "FR_APPEND_PY_FUNC",
		5: "FR_APPEND_ARG",
		6: "BK_RETURN_RESULT",
	}
	CommandType_value = map[string]int32{
		"UNSPECIFIED":       0,
		"ACK":               1,
		"FR_READY":          2,
		"FR_APPEND_DATA":    3,
		"FR_APPEND_PY_FUNC": 4,
		"FR_APPEND_ARG":     5,
		"BK_RETURN_RESULT":  6,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_controller_controller_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_controller_controller_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{0}
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{0}
}

func (x *Ack) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Ready struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ready) Reset() {
	*x = Ready{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ready) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ready) ProtoMessage() {}

func (x *Ready) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ready.ProtoReflect.Descriptor instead.
func (*Ready) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{1}
}

type AppendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string               `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"` // current execution session, empty if shared by all sessions
	Object    *proto.EncodedObject `protobuf:"bytes,2,opt,name=Object,proto3" json:"Object,omitempty"`       // encoded object
}

func (x *AppendData) Reset() {
	*x = AppendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendData) ProtoMessage() {}

func (x *AppendData) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendData.ProtoReflect.Descriptor instead.
func (*AppendData) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{2}
}

func (x *AppendData) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AppendData) GetObject() *proto.EncodedObject {
	if x != nil {
		return x.Object
	}
	return nil
}

type AppendPyFunc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string             `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                              // function name
	Params        []string           `protobuf:"bytes,2,rep,name=Params,proto3" json:"Params,omitempty"`                          //function params
	Venv          string             `protobuf:"bytes,3,opt,name=Venv,proto3" json:"Venv,omitempty"`                              // function virtual environment
	Requirements  []string           `protobuf:"bytes,4,rep,name=Requirements,proto3" json:"Requirements,omitempty"`              // function dependencies
	PickledObject []byte             `protobuf:"bytes,5,opt,name=PickledObject,proto3" json:"PickledObject,omitempty"`            // encoded function impl
	Language      proto.Language     `protobuf:"varint,6,opt,name=Language,proto3,enum=proto.Language" json:"Language,omitempty"` // return type of function
	Resource      *resource.Resource `protobuf:"bytes,7,opt,name=Resource,proto3" json:"Resource,omitempty"`                      // requested resources by task (added by kekwy 25/4/16)
}

func (x *AppendPyFunc) Reset() {
	*x = AppendPyFunc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendPyFunc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendPyFunc) ProtoMessage() {}

func (x *AppendPyFunc) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendPyFunc.ProtoReflect.Descriptor instead.
func (*AppendPyFunc) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{3}
}

func (x *AppendPyFunc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppendPyFunc) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *AppendPyFunc) GetVenv() string {
	if x != nil {
		return x.Venv
	}
	return ""
}

func (x *AppendPyFunc) GetRequirements() []string {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *AppendPyFunc) GetPickledObject() []byte {
	if x != nil {
		return x.PickledObject
	}
	return nil
}

func (x *AppendPyFunc) GetLanguage() proto.Language {
	if x != nil {
		return x.Language
	}
	return proto.Language(0)
}

func (x *AppendPyFunc) GetResource() *resource.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type AppendArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID  string      `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`   // current execution session
	InstanceID string      `protobuf:"bytes,2,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"` // id of function instance under current execution session
	Name       string      `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`             // function name
	Param      string      `protobuf:"bytes,4,opt,name=Param,proto3" json:"Param,omitempty"`           // param name
	Value      *proto.Flow `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`           // object ref for param
}

func (x *AppendArg) Reset() {
	*x = AppendArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendArg) ProtoMessage() {}

func (x *AppendArg) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendArg.ProtoReflect.Descriptor instead.
func (*AppendArg) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{4}
}

func (x *AppendArg) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AppendArg) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *AppendArg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppendArg) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *AppendArg) GetValue() *proto.Flow {
	if x != nil {
		return x.Value
	}
	return nil
}

type ReturnResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID  string `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`   // current execution session
	InstanceID string `protobuf:"bytes,2,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"` // id of function instance under current execution session
	Name       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`             // function name
	// Types that are assignable to Result:
	//	*ReturnResult_Value
	//	*ReturnResult_Error
	Result isReturnResult_Result `protobuf_oneof:"Result"`
}

func (x *ReturnResult) Reset() {
	*x = ReturnResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnResult) ProtoMessage() {}

func (x *ReturnResult) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnResult.ProtoReflect.Descriptor instead.
func (*ReturnResult) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{5}
}

func (x *ReturnResult) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *ReturnResult) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *ReturnResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *ReturnResult) GetResult() isReturnResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ReturnResult) GetValue() *proto.Flow {
	if x, ok := x.GetResult().(*ReturnResult_Value); ok {
		return x.Value
	}
	return nil
}

func (x *ReturnResult) GetError() string {
	if x, ok := x.GetResult().(*ReturnResult_Error); ok {
		return x.Error
	}
	return ""
}

type isReturnResult_Result interface {
	isReturnResult_Result()
}

type ReturnResult_Value struct {
	Value *proto.Flow `protobuf:"bytes,4,opt,name=Value,proto3,oneof"` // success: return result
}

type ReturnResult_Error struct {
	Error string `protobuf:"bytes,5,opt,name=Error,proto3,oneof"` // fail: return error
}

func (*ReturnResult_Value) isReturnResult_Result() {}

func (*ReturnResult_Error) isReturnResult_Result() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conn string      `protobuf:"bytes,1,opt,name=Conn,proto3" json:"Conn,omitempty"`
	Type CommandType `protobuf:"varint,2,opt,name=Type,proto3,enum=controller.CommandType" json:"Type,omitempty"`
	// Types that are assignable to Command:
	//	*Message_Ack
	//	*Message_Ready
	//	*Message_AppendData
	//	*Message_AppendPyFunc
	//	*Message_AppendArg
	//	*Message_ReturnResult
	Command isMessage_Command `protobuf_oneof:"Command"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_controller_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetConn() string {
	if x != nil {
		return x.Conn
	}
	return ""
}

func (x *Message) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_UNSPECIFIED
}

func (m *Message) GetCommand() isMessage_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *Message) GetAck() *Ack {
	if x, ok := x.GetCommand().(*Message_Ack); ok {
		return x.Ack
	}
	return nil
}

func (x *Message) GetReady() *Ready {
	if x, ok := x.GetCommand().(*Message_Ready); ok {
		return x.Ready
	}
	return nil
}

func (x *Message) GetAppendData() *AppendData {
	if x, ok := x.GetCommand().(*Message_AppendData); ok {
		return x.AppendData
	}
	return nil
}

func (x *Message) GetAppendPyFunc() *AppendPyFunc {
	if x, ok := x.GetCommand().(*Message_AppendPyFunc); ok {
		return x.AppendPyFunc
	}
	return nil
}

func (x *Message) GetAppendArg() *AppendArg {
	if x, ok := x.GetCommand().(*Message_AppendArg); ok {
		return x.AppendArg
	}
	return nil
}

func (x *Message) GetReturnResult() *ReturnResult {
	if x, ok := x.GetCommand().(*Message_ReturnResult); ok {
		return x.ReturnResult
	}
	return nil
}

type isMessage_Command interface {
	isMessage_Command()
}

type Message_Ack struct {
	Ack *Ack `protobuf:"bytes,3,opt,name=Ack,proto3,oneof"`
}

type Message_Ready struct {
	Ready *Ready `protobuf:"bytes,4,opt,name=Ready,proto3,oneof"`
}

type Message_AppendData struct {
	AppendData *AppendData `protobuf:"bytes,5,opt,name=AppendData,proto3,oneof"`
}

type Message_AppendPyFunc struct {
	AppendPyFunc *AppendPyFunc `protobuf:"bytes,6,opt,name=AppendPyFunc,proto3,oneof"`
}

type Message_AppendArg struct {
	AppendArg *AppendArg `protobuf:"bytes,7,opt,name=AppendArg,proto3,oneof"`
}

type Message_ReturnResult struct {
	ReturnResult *ReturnResult `protobuf:"bytes,8,opt,name=ReturnResult,proto3,oneof"`
}

func (*Message_Ack) isMessage_Command() {}

func (*Message_Ready) isMessage_Command() {}

func (*Message_AppendData) isMessage_Command() {}

func (*Message_AppendPyFunc) isMessage_Command() {}

func (*Message_AppendArg) isMessage_Command() {}

func (*Message_ReturnResult) isMessage_Command() {}

var File_controller_controller_proto protoreflect.FileDescriptor

var file_controller_controller_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x1a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x07, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x58, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x79, 0x46,
	0x75, 0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56,
	0x65, 0x6e, 0x76, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x6b, 0x6c,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x50, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a,
	0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x09, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x21, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6c,
	0x6f, 0x77, 0x48, 0x00, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x96, 0x03,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x6e,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x2b, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x41, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x12,
	0x29, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x48, 0x00, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x79,
	0x46, 0x75, 0x6e, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x79,
	0x46, 0x75, 0x6e, 0x63, 0x48, 0x00, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x79,
	0x46, 0x75, 0x6e, 0x63, 0x12, 0x35, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x72,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x48, 0x00,
	0x52, 0x09, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x12, 0x3e, 0x0a, 0x0c, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0x89, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x4b, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x46, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x5f,
	0x50, 0x59, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x5f,
	0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10,
	0x42, 0x4b, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x10, 0x06, 0x32, 0x4e, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x39, 0x74, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2f, 0x69, 0x67, 0x6e, 0x69, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_controller_controller_proto_rawDescOnce sync.Once
	file_controller_controller_proto_rawDescData = file_controller_controller_proto_rawDesc
)

func file_controller_controller_proto_rawDescGZIP() []byte {
	file_controller_controller_proto_rawDescOnce.Do(func() {
		file_controller_controller_proto_rawDescData = protoimpl.X.CompressGZIP(file_controller_controller_proto_rawDescData)
	})
	return file_controller_controller_proto_rawDescData
}

var file_controller_controller_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_controller_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_controller_controller_proto_goTypes = []interface{}{
	(CommandType)(0),            // 0: controller.CommandType
	(*Ack)(nil),                 // 1: controller.Ack
	(*Ready)(nil),               // 2: controller.Ready
	(*AppendData)(nil),          // 3: controller.AppendData
	(*AppendPyFunc)(nil),        // 4: controller.AppendPyFunc
	(*AppendArg)(nil),           // 5: controller.AppendArg
	(*ReturnResult)(nil),        // 6: controller.ReturnResult
	(*Message)(nil),             // 7: controller.Message
	(*proto.EncodedObject)(nil), // 8: proto.EncodedObject
	(proto.Language)(0),         // 9: proto.Language
	(*resource.Resource)(nil),   // 10: resource.Resource
	(*proto.Flow)(nil),          // 11: proto.Flow
}
var file_controller_controller_proto_depIdxs = []int32{
	8,  // 0: controller.AppendData.Object:type_name -> proto.EncodedObject
	9,  // 1: controller.AppendPyFunc.Language:type_name -> proto.Language
	10, // 2: controller.AppendPyFunc.Resource:type_name -> resource.Resource
	11, // 3: controller.AppendArg.Value:type_name -> proto.Flow
	11, // 4: controller.ReturnResult.Value:type_name -> proto.Flow
	0,  // 5: controller.Message.Type:type_name -> controller.CommandType
	1,  // 6: controller.Message.Ack:type_name -> controller.Ack
	2,  // 7: controller.Message.Ready:type_name -> controller.Ready
	3,  // 8: controller.Message.AppendData:type_name -> controller.AppendData
	4,  // 9: controller.Message.AppendPyFunc:type_name -> controller.AppendPyFunc
	5,  // 10: controller.Message.AppendArg:type_name -> controller.AppendArg
	6,  // 11: controller.Message.ReturnResult:type_name -> controller.ReturnResult
	7,  // 12: controller.Service.ControllerSession:input_type -> controller.Message
	7,  // 13: controller.Service.ControllerSession:output_type -> controller.Message
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_controller_controller_proto_init() }
func file_controller_controller_proto_init() {
	if File_controller_controller_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_controller_controller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_controller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ready); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_controller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_controller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendPyFunc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_controller_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_controller_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_controller_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_controller_controller_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ReturnResult_Value)(nil),
		(*ReturnResult_Error)(nil),
	}
	file_controller_controller_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Message_Ack)(nil),
		(*Message_Ready)(nil),
		(*Message_AppendData)(nil),
		(*Message_AppendPyFunc)(nil),
		(*Message_AppendArg)(nil),
		(*Message_ReturnResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_controller_controller_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controller_controller_proto_goTypes,
		DependencyIndexes: file_controller_controller_proto_depIdxs,
		EnumInfos:         file_controller_controller_proto_enumTypes,
		MessageInfos:      file_controller_controller_proto_msgTypes,
	}.Build()
	File_controller_controller_proto = out.File
	file_controller_controller_proto_rawDesc = nil
	file_controller_controller_proto_goTypes = nil
	file_controller_controller_proto_depIdxs = nil
}
